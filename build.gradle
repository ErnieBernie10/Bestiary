plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {

	modApi "com.github.Pyrofab.Cardinal-Components-API:cardinal-components-base:2.0.1-pre"
	include "com.github.Pyrofab.Cardinal-Components-API:cardinal-components-base:2.0.1-pre"
	modImplementation "com.github.Pyrofab.Cardinal-Components-API:cardinal-components-entity:2.0.1-pre"
	include "com.github.Pyrofab.Cardinal-Components-API:cardinal-components-entity:2.0.1-pre"
	modCompile "io.github.cottonmc:LibGui:1.3.2"
	
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}
repositories {
	maven {
		name = "JitPack"
		url "https://jitpack.io"
	}
	maven {
		name = "Cotton"
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
	}
	maven {
		name = "Cotton (snapshots)"
		url = "http://server.bbkr.space:8081/artifactory/libs-snapshot/"
	}
//	maven {
//		name = "NerdHubMC"
//		url = "https://maven.abusedmaster.xyz"
//	}
}
// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	
}
